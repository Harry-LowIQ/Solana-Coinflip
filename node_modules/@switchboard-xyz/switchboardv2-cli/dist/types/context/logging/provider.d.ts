export declare type LogLevel = "error" | "warn" | "info" | "debug" | "config" | "output";
export interface LoggerStrategy {
    log(message: string): void;
    info(message: string): void;
    warn(message: string): void;
    error(message: string): void;
    debug(message: string): void;
}
export interface ConsoleParameters {
    level?: LogLevel;
}
export interface FileParameters {
    level: LogLevel;
    filename: string;
}
export interface LoggerParameters {
    console?: ConsoleParameters | false;
    file?: FileParameters | false;
    silent?: boolean;
    verbose?: boolean;
}
export declare class LogProvider implements LoggerStrategy {
    logger: LoggerStrategy;
    silent: boolean;
    verbose: boolean;
    constructor(parameters: LoggerParameters);
    log(message: string): void;
    info(message: string): void;
    warn(message: string): void;
    error(message: string): void;
    debug(message: string): void;
}
export declare const CONSOLE_ONLY_LOGGER: LoggerParameters;
export declare const DEFAULT_LOGGER: LogProvider;
