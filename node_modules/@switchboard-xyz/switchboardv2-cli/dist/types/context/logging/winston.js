"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.WinstonLogger = void 0;
const tslib_1 = require("tslib");
const winston = tslib_1.__importStar(require("winston"));
class WinstonLogger {
    constructor(parameters) {
        // file logger formatter
        const format = winston.format.combine(winston.format.timestamp(), winston.format.json()
        // winston.format.printf((info) => {
        //   return JSON.stringify({
        //     timestamp: info.timestamp,
        //     level: info.level,
        //     service: info.service,
        //     message: info.message.replace(/[^\s\w]/gi, ""),
        //   });
        // })
        );
        const transports = [];
        if (parameters.file && parameters.file.filename) {
            transports.push(new winston.transports.File({
                filename: parameters.file.filename,
                level: "debug",
                format: format,
            }));
        }
        if (parameters.console) {
            transports.push(new winston.transports.Console({
                level: parameters.console.level || "info",
                format: winston.format.printf((info) => `${info.message}`),
            }));
        }
        this.logger = winston.createLogger({
            transports,
            defaultMeta: { service: "js_sbv2_cli" },
        });
    }
    log(message) {
        this.logger.info(message);
    }
    info(message) {
        this.logger.info(message);
    }
    warn(message) {
        this.logger.warn(message);
    }
    error(message) {
        this.logger.error(message);
    }
    debug(message) {
        this.logger.debug(message);
    }
}
exports.WinstonLogger = WinstonLogger;
