import BaseCommand from "./BaseCommand";
declare abstract class OutputFileBaseCommand extends BaseCommand {
    outputBasePath: string;
    outputJsonFile?: string;
    outputCsvFile?: string;
    static flags: {
        force: import("@oclif/core/lib/interfaces").BooleanFlag<boolean>;
        outputFile: import("@oclif/core/lib/interfaces").OptionFlag<string>;
        json: import("@oclif/core/lib/interfaces").BooleanFlag<boolean>;
        csv: import("@oclif/core/lib/interfaces").BooleanFlag<boolean>;
        verbose: import("@oclif/core/lib/interfaces").BooleanFlag<boolean>;
        silent: import("@oclif/core/lib/interfaces").BooleanFlag<boolean>;
        mainnetBeta: import("@oclif/core/lib/interfaces").BooleanFlag<boolean>;
        rpcUrl: import("@oclif/core/lib/interfaces").OptionFlag<string>;
        programId: import("@oclif/core/lib/interfaces").OptionFlag<string>;
        keypair: import("@oclif/core/lib/interfaces").OptionFlag<string>;
    };
    init(): Promise<void>;
    jsonReplacers(key: any, value: any): any;
    save<T, K extends keyof T>(rows?: T | T[], headers?: K[]): void;
    saveJson<T>(rows: T | T[]): void;
    saveCsv<T, K extends keyof T>(rows: T | T[], headers: K[]): void;
}
export default OutputFileBaseCommand;
