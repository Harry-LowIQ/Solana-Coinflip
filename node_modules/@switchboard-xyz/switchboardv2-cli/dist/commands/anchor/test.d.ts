/// <reference types="node" />
import { PublicKey } from "@solana/web3.js";
import { ChildProcess } from "child_process";
import BaseCommand from "../../BaseCommand";
export default class AnchorTest extends BaseCommand {
    static description: string;
    dockerOracleProcess?: ChildProcess;
    anchorChildProcess?: ChildProcess;
    timestamp: number;
    static flags: {
        switchboardDir: import("@oclif/core/lib/interfaces").OptionFlag<string>;
        oracleKey: import("@oclif/core/lib/interfaces").OptionFlag<string>;
        nodeImage: import("@oclif/core/lib/interfaces").OptionFlag<string>;
        arm: import("@oclif/core/lib/interfaces").BooleanFlag<boolean>;
        timeout: import("@oclif/core/lib/interfaces").OptionFlag<number>;
        silent: import("@oclif/core/lib/interfaces").BooleanFlag<boolean>;
        verbose: import("@oclif/core/lib/interfaces").BooleanFlag<boolean>;
        mainnetBeta: import("@oclif/core/lib/interfaces").BooleanFlag<boolean>;
        rpcUrl: import("@oclif/core/lib/interfaces").OptionFlag<string>;
        programId: import("@oclif/core/lib/interfaces").OptionFlag<string>;
        keypair: import("@oclif/core/lib/interfaces").OptionFlag<string>;
    };
    saveLogs(logs: string[], nodeImage: string): string | null;
    startDockerOracle(nodeImage: string, platform: string, oracleKey: PublicKey, keypairPath: string, silent?: boolean, allLogs?: string[]): void;
    createDockerOracle(nodeImage: string, platform: string, oracleKey: PublicKey, keypairPath: string, silent?: boolean, allLogs?: any[]): void;
    run(): Promise<void>;
    catch(error: any): Promise<void>;
}
