import BaseCommand from "../../../BaseCommand";
export default class AggregatorCreate extends BaseCommand {
    static description: string;
    static flags: {
        authority: import("@oclif/core/lib/interfaces").OptionFlag<string>;
        crankKey: import("@oclif/core/lib/interfaces").OptionFlag<string>;
        enable: import("@oclif/core/lib/interfaces").BooleanFlag<boolean>;
        queueAuthority: import("@oclif/core/lib/interfaces").OptionFlag<string>;
        name: import("@oclif/core/lib/interfaces").OptionFlag<string>;
        forceReportPeriod: import("@oclif/core/lib/interfaces").OptionFlag<number>;
        batchSize: import("@oclif/core/lib/interfaces").OptionFlag<number>;
        minJobs: import("@oclif/core/lib/interfaces").OptionFlag<number>;
        minOracles: import("@oclif/core/lib/interfaces").OptionFlag<number>;
        updateInterval: import("@oclif/core/lib/interfaces").OptionFlag<number>;
        varianceThreshold: import("@oclif/core/lib/interfaces").OptionFlag<string>;
        job: import("@oclif/core/lib/interfaces").OptionFlag<string[]>;
        verbose: import("@oclif/core/lib/interfaces").BooleanFlag<boolean>;
        silent: import("@oclif/core/lib/interfaces").BooleanFlag<boolean>;
        mainnetBeta: import("@oclif/core/lib/interfaces").BooleanFlag<boolean>;
        rpcUrl: import("@oclif/core/lib/interfaces").OptionFlag<string>;
        programId: import("@oclif/core/lib/interfaces").OptionFlag<string>;
        keypair: import("@oclif/core/lib/interfaces").OptionFlag<string>;
    };
    static args: {
        name: string;
        description: string;
    }[];
    run(): Promise<void>;
    catch(error: any): Promise<void>;
}
