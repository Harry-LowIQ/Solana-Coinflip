"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const tslib_1 = require("tslib");
const web3_js_1 = require("@solana/web3.js");
const sbv2_utils_1 = require("@switchboard-xyz/sbv2-utils");
const switchboard_v2_1 = require("@switchboard-xyz/switchboard-v2");
const chalk_1 = tslib_1.__importDefault(require("chalk"));
const BaseCommand_1 = tslib_1.__importDefault(require("../../../BaseCommand"));
class AggregatorHistoryPrint extends BaseCommand_1.default {
    async run() {
        var _a;
        const { args } = await this.parse(AggregatorHistoryPrint);
        const aggregatorAccount = new switchboard_v2_1.AggregatorAccount({
            program: this.program,
            publicKey: new web3_js_1.PublicKey(args.aggregatorKey),
        });
        const aggregator = await aggregatorAccount.loadData();
        const history = await aggregatorAccount.loadHistory();
        const historySize = (_a = history.length) !== null && _a !== void 0 ? _a : 0;
        this.logger.info(chalk_1.default.underline((0, sbv2_utils_1.chalkString)("## History", historySize.toString().padEnd(8), 24)));
        for (const row of history)
            this.logger.info((0, sbv2_utils_1.chalkString)((0, sbv2_utils_1.anchorBNtoDateTimeString)(row.timestamp), row.value, 24));
    }
    async catch(error) {
        super.catch(error, "failed to print aggregator history");
    }
}
exports.default = AggregatorHistoryPrint;
AggregatorHistoryPrint.description = "Print the history buffer associated with an aggregator account";
AggregatorHistoryPrint.aliases = ["aggregator:history:print", "aggregator:print:history"];
AggregatorHistoryPrint.flags = {
    ...BaseCommand_1.default.flags,
};
AggregatorHistoryPrint.args = [
    {
        name: "aggregatorKey",
        description: "public key of the aggregator account to fetch permission account and deserialize",
    },
];
AggregatorHistoryPrint.examples = [
    "$ sbv2 aggregator:print:history 9CmLriMhykZ8xAoNTSHjHbk6SkuMhie1NCZn9P6LCuZ4",
];
