"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const tslib_1 = require("tslib");
const web3_js_1 = require("@solana/web3.js");
const sbv2_utils_1 = require("@switchboard-xyz/sbv2-utils");
const switchboard_v2_1 = require("@switchboard-xyz/switchboard-v2");
const BaseCommand_1 = tslib_1.__importDefault(require("../../../BaseCommand"));
class AggregatorLeasePrint extends BaseCommand_1.default {
    async run() {
        const { args } = await this.parse(AggregatorLeasePrint);
        const aggregatorAccount = new switchboard_v2_1.AggregatorAccount({
            program: this.program,
            publicKey: new web3_js_1.PublicKey(args.aggregatorKey),
        });
        const aggregator = await aggregatorAccount.loadData();
        const queueAccount = new switchboard_v2_1.OracleQueueAccount({
            program: this.program,
            publicKey: aggregator.queuePubkey,
        });
        const queue = await queueAccount.loadData();
        const [leaseAccount] = switchboard_v2_1.LeaseAccount.fromSeed(this.program, queueAccount, aggregatorAccount);
        try {
            const lease = await leaseAccount.loadData();
            this.logger.log(await (0, sbv2_utils_1.prettyPrintLease)(leaseAccount, lease));
        }
        catch {
            this.logger.error(`failed to find a lease account`);
        }
    }
    async catch(error) {
        super.catch(error, "failed to print lease account");
    }
}
exports.default = AggregatorLeasePrint;
AggregatorLeasePrint.description = "Print the lease account associated with a Switchboard aggregator account";
AggregatorLeasePrint.aliases = ["aggregator:lease:print", "aggregator:print:lease"];
AggregatorLeasePrint.flags = {
    ...BaseCommand_1.default.flags,
};
AggregatorLeasePrint.args = [
    {
        name: "aggregatorKey",
        description: "public key of the aggregator account to fetch permission account and deserialize",
    },
];
AggregatorLeasePrint.examples = [
    "$ sbv2 aggregator:lease:print 8SXvChNYFhRq4EZuZvnhjrB3jJRQCv4k3P4W6hesH3Ee",
];
