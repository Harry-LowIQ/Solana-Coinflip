"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const tslib_1 = require("tslib");
const core_1 = require("@oclif/core");
const web3_js_1 = require("@solana/web3.js");
const sbv2_utils_1 = require("@switchboard-xyz/sbv2-utils");
const switchboard_v2_1 = require("@switchboard-xyz/switchboard-v2");
const BaseCommand_1 = tslib_1.__importDefault(require("../../BaseCommand"));
class QueuePrint extends BaseCommand_1.default {
    async run() {
        const { args, flags } = await this.parse(QueuePrint);
        const queueAccount = new switchboard_v2_1.OracleQueueAccount({
            program: this.program,
            publicKey: new web3_js_1.PublicKey(args.queueKey),
        });
        const data = await queueAccount.loadData();
        this.logger.log(await (0, sbv2_utils_1.prettyPrintQueue)(queueAccount, data, flags.oracles));
    }
    async catch(error) {
        super.catch(error, "failed to print oracle queue account");
    }
}
exports.default = QueuePrint;
QueuePrint.description = "Print the deserialized Switchboard oraclequeue account";
QueuePrint.aliases = ["queue:print"];
QueuePrint.flags = {
    ...BaseCommand_1.default.flags,
    oracles: core_1.Flags.boolean({
        description: "output oracles that are heartbeating on the queue",
        default: false,
    }),
};
QueuePrint.args = [
    {
        name: "queueKey",
        description: "public key of the oracle queue account to deserialize",
    },
];
QueuePrint.examples = [
    "$ sbv2 queue:print GhYg3R1V6DmJbwuc57qZeoYG6gUuvCotUF1zU3WCj98U",
];
