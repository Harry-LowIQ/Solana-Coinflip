"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const tslib_1 = require("tslib");
const core_1 = require("@oclif/core");
const BaseCommand_1 = tslib_1.__importDefault(require("../BaseCommand"));
const deposit_1 = tslib_1.__importDefault(require("./oracle/deposit"));
const withdraw_1 = tslib_1.__importDefault(require("./oracle/withdraw"));
class Config extends BaseCommand_1.default {
    async init() {
        await super.init();
        const { args, flags, argv } = await this.parse(Config);
        this.passThroughArguments = argv.slice(1);
        this.baseCommand = args.baseCommand;
        this.flags = flags;
    }
    async run() {
        switch (this.baseCommand) {
            case "oracle:withdraw": {
                await withdraw_1.default.run(this.passThroughArguments);
                break;
            }
            case "oracle:deposit": {
                await deposit_1.default.run(this.passThroughArguments);
                break;
            }
        }
    }
}
exports.default = Config;
Config.hidden = true; // not ready yet
Config.description = "run a cli command using your saved configuration";
Config.flags = {
    ...BaseCommand_1.default.flags,
    pubkey: core_1.Flags.string({
        description: "command specific. override default account with provided public key",
    }),
};
Config.args = [
    {
        name: "baseCommand",
        required: true,
        description: "base command to run",
    },
    {
        name: "passThroughArguments",
        required: false,
        description: "pass through arguements for baseCommand",
    }, // documentation purposes
];
Config.strict = false;
