"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const tslib_1 = require("tslib");
const web3_js_1 = require("@solana/web3.js");
const sbv2_utils_1 = require("@switchboard-xyz/sbv2-utils");
const switchboard_v2_1 = require("@switchboard-xyz/switchboard-v2");
const BaseCommand_1 = tslib_1.__importDefault(require("../../BaseCommand"));
class OracleBalance extends BaseCommand_1.default {
    async run() {
        const { args } = await this.parse(OracleBalance);
        const oracleAccount = new switchboard_v2_1.OracleAccount({
            program: this.program,
            publicKey: new web3_js_1.PublicKey(args.oracleKey),
        });
        const oracle = await oracleAccount.loadData();
        const balance = await this.program.provider.connection.getTokenAccountBalance(oracle.tokenAccount);
        if (this.silent) {
            console.log(balance.value.amount);
        }
        else {
            this.logger.log((0, sbv2_utils_1.chalkString)("Oracle Balance:", `${balance.value.uiAmountString} (${balance.value.amount})`, 12));
        }
    }
    async catch(error) {
        super.catch(error, "failed to get oracle token balance");
    }
}
exports.default = OracleBalance;
OracleBalance.description = "check an oracles token balance";
OracleBalance.flags = {
    ...BaseCommand_1.default.flags,
};
OracleBalance.args = [
    {
        name: "oracleKey",
        description: "public key of the oracle to check token balance",
    },
];
OracleBalance.examples = [
    "$ sbv2 oracle:balance 9CmLriMhykZ8xAoNTSHjHbk6SkuMhie1NCZn9P6LCuZ4",
];
