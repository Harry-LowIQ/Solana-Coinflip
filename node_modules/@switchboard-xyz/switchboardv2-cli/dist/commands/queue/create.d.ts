import BaseCommand from "../../BaseCommand";
export default class QueueCreate extends BaseCommand {
    static description: string;
    static aliases: string[];
    static flags: {
        force: import("@oclif/core/lib/interfaces").BooleanFlag<boolean>;
        authority: import("@oclif/core/lib/interfaces").OptionFlag<string>;
        name: import("@oclif/core/lib/interfaces").OptionFlag<string>;
        minStake: import("@oclif/core/lib/interfaces").OptionFlag<string>;
        reward: import("@oclif/core/lib/interfaces").OptionFlag<string>;
        crankSize: import("@oclif/core/lib/interfaces").OptionFlag<number>;
        oracleTimeout: import("@oclif/core/lib/interfaces").OptionFlag<number>;
        numOracles: import("@oclif/core/lib/interfaces").OptionFlag<number>;
        queueSize: import("@oclif/core/lib/interfaces").OptionFlag<number>;
        unpermissionedFeeds: import("@oclif/core/lib/interfaces").BooleanFlag<boolean>;
        unpermissionedVrf: import("@oclif/core/lib/interfaces").BooleanFlag<boolean>;
        enableBufferRelayers: import("@oclif/core/lib/interfaces").BooleanFlag<boolean>;
        outputFile: import("@oclif/core/lib/interfaces").OptionFlag<string>;
        verbose: import("@oclif/core/lib/interfaces").BooleanFlag<boolean>;
        silent: import("@oclif/core/lib/interfaces").BooleanFlag<boolean>;
        mainnetBeta: import("@oclif/core/lib/interfaces").BooleanFlag<boolean>;
        rpcUrl: import("@oclif/core/lib/interfaces").OptionFlag<string>;
        programId: import("@oclif/core/lib/interfaces").OptionFlag<string>;
        keypair: import("@oclif/core/lib/interfaces").OptionFlag<string>;
    };
    run(): Promise<void>;
    catch(error: any): Promise<void>;
}
