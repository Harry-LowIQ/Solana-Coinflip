"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const tslib_1 = require("tslib");
const core_1 = require("@oclif/core");
const web3_js_1 = require("@solana/web3.js");
const switchboard_v2_1 = require("@switchboard-xyz/switchboard-v2");
const chalk_1 = tslib_1.__importDefault(require("chalk"));
const BaseCommand_1 = tslib_1.__importDefault(require("../../../BaseCommand"));
const utils_1 = require("../../../utils");
class QueueSetRewards extends BaseCommand_1.default {
    async run() {
        const { args, flags } = await this.parse(QueueSetRewards);
        (0, utils_1.verifyProgramHasPayer)(this.program);
        const queueAccount = new switchboard_v2_1.OracleQueueAccount({
            program: this.program,
            publicKey: new web3_js_1.PublicKey(args.queueKey),
        });
        const queue = await queueAccount.loadData();
        const authority = await this.loadAuthority(flags.authority, queue.authority);
        const txn = await queueAccount.setRewards({
            rewards: args.rewards,
            authority,
        });
        if (this.silent) {
            console.log(txn);
        }
        else {
            this.logger.log(`${chalk_1.default.green(`${utils_1.CHECK_ICON}Queue rewards set successfully\r\n`)}`);
        }
    }
    async catch(error) {
        super.catch(error, "failed to set queue rewards");
    }
}
exports.default = QueueSetRewards;
QueueSetRewards.description = "set an oracle queue's rewards";
QueueSetRewards.flags = {
    ...BaseCommand_1.default.flags,
    authority: core_1.Flags.string({
        char: "a",
        description: "alternate keypair that is the authority for oracle queue",
    }),
};
QueueSetRewards.args = [
    {
        name: "queueKey",
        description: "public key of the oracle queue",
    },
    {
        name: "rewards",
        description: "token rewards for each assigned oracle per open round call",
    },
];
QueueSetRewards.examples = [
// "$ sbv2 queue:add:crank 5aYuxRdcB9GpWrEXVMBQp2R5uf94uoBiFdMEBwcmHuU4 -k ../authority-keypair.json -n crank-1",
// "$ sbv2 queue:add:crank 5aYuxRdcB9GpWrEXVMBQp2R5uf94uoBiFdMEBwcmHuU4 -k ../payer-keypair.json -a ../authority-keypair.json",
];
