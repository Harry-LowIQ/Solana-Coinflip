"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.promiseWithTimeout = exports.sleep = void 0;
/** Sleep for a given number of milliseconds
 * @param ms number of milliseconds to sleep for
 * @return a promise that resolves when the sleep interval has elapsed
 */
const sleep = (ms) => new Promise((s) => setTimeout(s, ms));
exports.sleep = sleep;
/** Returns a promise that resolves successfully if returned before the given timeout has elapsed.
 * @param ms the number of milliseconds before the promise expires
 * @param promise the promise to wait for
 * @param timeoutError the error to throw if the promise expires
 * @return the promise result
 */
async function promiseWithTimeout(ms, promise, timeoutError = new Error("timeoutError")) {
    // create a promise that rejects in milliseconds
    const timeout = new Promise((_, reject) => {
        setTimeout(() => {
            reject(timeoutError);
        }, ms);
    });
    return Promise.race([promise, timeout]);
}
exports.promiseWithTimeout = promiseWithTimeout;
//# sourceMappingURL=async.js.map