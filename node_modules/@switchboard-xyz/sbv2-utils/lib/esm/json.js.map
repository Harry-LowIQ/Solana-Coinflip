{"version":3,"file":"json.js","sourceRoot":"","sources":["../../src/json.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,MAAM,iBAAiB,CAAC;AAC5C,OAAO,EAAE,kBAAkB,EAAE,MAAM,iCAAiC,CAAC;AACrE,OAAO,GAAG,MAAM,QAAQ,CAAC;AACzB,OAAO,EAAE,MAAM,OAAO,CAAC;AAEvB,SAAS,kBAAkB,CAAC,GAAQ;IAClC,MAAM,SAAS,GAAG,GAAG,CAAC,MAAM,CAAC;IAC7B,GAAG,CAAC,MAAM,GAAG,IAAI,CAAC;IAClB,IAAI;QACF,MAAM,GAAG,GAAG,GAAG,CAAC,QAAQ,EAAE,CAAC;QAC3B,GAAG,CAAC,MAAM,GAAG,SAAS,CAAC;QACvB,OAAO,GAAG,CAAC;KACZ;IAAC,MAAM,GAAE;IACV,GAAG,CAAC,MAAM,GAAG,SAAS,CAAC;IACvB,OAAO,GAAG,CAAC,QAAQ,EAAE,CAAC;AACxB,CAAC;AAED,MAAM,UAAU,aAAa,CAAC,GAAQ,EAAE,KAAU;IAChD,IAAI,OAAO,KAAK,KAAK,QAAQ,IAAI,OAAO,KAAK,KAAK,QAAQ,EAAE;QAC1D,OAAO,KAAK,CAAC;KACd;IACD,KAAK;IACL,IAAI,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE;QAClB,OAAO,KAAK,CAAC,QAAQ,EAAE,CAAC;KACzB;IACD,IACE,KAAK,YAAY,kBAAkB;QACnC,CAAC,KAAK;YACJ,OAAO,KAAK,KAAK,QAAQ;YACzB,UAAU,IAAI,KAAK;YACnB,OAAO,IAAI,KAAK,CAAC,EACnB;QACA,MAAM,UAAU,GAAG,IAAI,kBAAkB,CAAC,KAAK,CAAC,QAAQ,EAAE,KAAK,CAAC,KAAK,CAAC,CAAC;QACvE,OAAO,kBAAkB,CAAC,UAAU,CAAC,KAAK,EAAE,CAAC,CAAC;KAC/C;IACD,SAAS;IACT,IAAI,KAAK,YAAY,GAAG,EAAE;QACxB,OAAO,kBAAkB,CAAC,KAAK,CAAC,CAAC;KAClC;IACD,SAAS;IACT,IAAI,KAAK,YAAY,SAAS,EAAE;QAC9B,OAAO,KAAK,CAAC,QAAQ,EAAE,CAAC;KACzB;IACD,SAAS;IACT,IAAI,OAAO,KAAK,KAAK,QAAQ,EAAE;QAC7B,OAAO,KAAK,CAAC,QAAQ,EAAE,CAAC;KACzB;IAED,kCAAkC;IAClC,OAAO,KAAK,CAAC;AACf,CAAC","sourcesContent":["import { PublicKey } from \"@solana/web3.js\";\nimport { SwitchboardDecimal } from \"@switchboard-xyz/switchboard-v2\";\nimport Big from \"big.js\";\nimport BN from \"bn.js\";\n\nfunction big2NumberOrString(big: Big): number | string {\n  const oldStrict = Big.strict;\n  Big.strict = true;\n  try {\n    const num = big.toNumber();\n    Big.strict = oldStrict;\n    return num;\n  } catch {}\n  Big.strict = oldStrict;\n  return big.toString();\n}\n\nexport function jsonReplacers(key: any, value: any): any {\n  if (typeof value === \"string\" || typeof value === \"number\") {\n    return value;\n  }\n  // BN\n  if (BN.isBN(value)) {\n    return value.toNumber();\n  }\n  if (\n    value instanceof SwitchboardDecimal ||\n    (value &&\n      typeof value === \"object\" &&\n      \"mantissa\" in value &&\n      \"scale\" in value)\n  ) {\n    const swbDecimal = new SwitchboardDecimal(value.mantissa, value.scale);\n    return big2NumberOrString(swbDecimal.toBig());\n  }\n  // big.js\n  if (value instanceof Big) {\n    return big2NumberOrString(value);\n  }\n  // pubkey\n  if (value instanceof PublicKey) {\n    return value.toBase58();\n  }\n  // bigint\n  if (typeof value === \"bigint\") {\n    return value.toString();\n  }\n\n  // Fall through for nested objects\n  return value;\n}\n"]}