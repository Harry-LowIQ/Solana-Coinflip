import type { OrcaU64 } from "@orca-so/sdk";
import * as anchor from "@project-serum/anchor";
import type { Fraction, Price, TokenAmount as SaberTokenAmount } from "@saberhq/token-utils";
import type { TokenAmount } from "@solana/web3.js";
import Big from "big.js";
import Decimal from "decimal.js";
export declare class BigUtils {
    static safeDiv(number_: Big, denominator: Big, decimals?: number): Big;
    static safeMul(...n: Big[]): Big;
    static safeNthRoot(big: Big, nthRoot: number, decimals?: number): Big;
    static safeSqrt(n: Big, decimals?: number): Big;
    static safePow(n: Big, exp: number, decimals?: number): Big;
    static fromBN(n: anchor.BN, decimals?: number): Big;
    static toDecimal(big: Big, decimals?: number): Decimal;
    static fromDecimal(decimal: Decimal, decimals?: number): Big;
    static fromOrcaU64(u64: OrcaU64): Big;
    static fromSaberTokenAmount(token: SaberTokenAmount): Big;
    static fromTokenAmount(token: TokenAmount): Big;
    static fromPrice(price: Price | Fraction): Big;
}
//# sourceMappingURL=big.d.ts.map